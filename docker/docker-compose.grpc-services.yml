# This file is for your VM (Machine 1)
# It ONLY runs the 5 services and exposes them.
version: '3.8'

services:
  grpc-service-a:
    build:
      context: ..
      dockerfile: docker/Dockerfile.grpc.service_a
    container_name: grpc-service-a
    environment:
      - SERVICE_PORT=50051
      - SERVICE_B_ADDRESS=grpc-service-b:50052
    ports:
      # CRITICAL: This exposes Service A to the VM's network
      - "50051:50051"
    networks:
      - grpc-network
    restart: unless-stopped

  grpc-service-b:
    build:
      context: ..
      dockerfile: docker/Dockerfile.grpc.service_b
    container_name: grpc-service-b
    environment:
      - SERVICE_PORT=50052
      - SERVICE_C_ADDRESS=grpc-service-c:50053
    # No 'ports' needed, this is internal
    networks:
      - grpc-network
    restart: unless-stopped
    depends_on:
      - grpc-service-a

  grpc-service-c:
    build:
      context: ..
      dockerfile: docker/Dockerfile.grpc.service_c
    container_name: grpc-service-c
    environment:
      - SERVICE_PORT=50053
      - SERVICE_D_ADDRESS=grpc-service-d:50054
    # No 'ports' needed, this is internal
    networks:
      - grpc-network
    restart: unless-stopped
    depends_on:
      - grpc-service-b

  grpc-service-d:
    build:
      context: ..
      dockerfile: docker/Dockerfile.grpc.service_d
    container_name: grpc-service-d
    environment:
      - SERVICE_PORT=50054
      - SERVICE_E_ADDRESS=grpc-service-e:50055
    # No 'ports' needed, this is internal
    networks:
      - grpc-network
    restart: unless-stopped
    depends_on:
      - grpc-service-c

  grpc-service-e:
    build:
      context: ..
      dockerfile: docker/Dockerfile.grpc.service_e
    container_name: grpc-service-e
    environment:
      - SERVICE_PORT=50055
    # No 'ports' needed, this is internal
    networks:
      - grpc-network
    restart: unless-stopped
    depends_on:
      - grpc-service-d

networks:
  grpc-network:
    driver: bridge
