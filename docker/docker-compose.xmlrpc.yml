version: '3.8'

services:
  # Statistics Service (Terminal Service - Statistical Analysis)
  xmlrpc-statistics:
    build:
      context: ..
      dockerfile: docker/Dockerfile.xmlrpc.statistics
    container_name: xmlrpc-statistics
    ports:
      - "8005:8005"
    networks:
      - xmlrpc-network
    environment:
      - PYTHONUNBUFFERED=1
      - STATISTICS_HOST=0.0.0.0
      - STATISTICS_PORT=8005
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import xmlrpc.client; xmlrpc.client.ServerProxy(\"http://localhost:8005\", allow_none=True).system.listMethods()' || exit 1"]
      interval: 3s
      timeout: 2s
      retries: 10
      start_period: 5s

  # MergeSort Service (Sort CGPA and Grade)
  xmlrpc-mergesort:
    build:
      context: ..
      dockerfile: docker/Dockerfile.xmlrpc.mergesort
    container_name: xmlrpc-mergesort
    ports:
      - "8003:8003"
    networks:
      - xmlrpc-network
    depends_on:
      xmlrpc-statistics:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - MERGESORT_HOST=0.0.0.0
      - MERGESORT_PORT=8003
      - STATISTICS_URL=http://xmlrpc-statistics:8005
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import xmlrpc.client; xmlrpc.client.ServerProxy(\"http://localhost:8003\", allow_none=True).system.listMethods()' || exit 1"]
      interval: 3s
      timeout: 2s
      retries: 10
      start_period: 5s

  # MapReduce Service (CGPA and Grade Classification - Entry Point)
  xmlrpc-mapreduce:
    build:
      context: ..
      dockerfile: docker/Dockerfile.xmlrpc.mapreduce
    container_name: xmlrpc-mapreduce
    ports:
      - "8001:8001"
    networks:
      - xmlrpc-network
    depends_on:
      xmlrpc-mergesort:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - MAPREDUCE_HOST=0.0.0.0
      - MAPREDUCE_PORT=8001
      - MERGESORT_URL=http://xmlrpc-mergesort:8003
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import xmlrpc.client; xmlrpc.client.ServerProxy(\"http://localhost:8001\", allow_none=True).system.listMethods()' || exit 1"]
      interval: 3s
      timeout: 2s
      retries: 10
      start_period: 5s

  # Client (calls MapReduce Service)
  xmlrpc-client:
    build:
      context: ..
      dockerfile: docker/Dockerfile.xmlrpc.client
    container_name: xmlrpc-client
    depends_on:
      xmlrpc-mapreduce:
        condition: service_healthy
    networks:
      - xmlrpc-network
    environment:
      - PYTHONUNBUFFERED=1
      - MAPREDUCE_URL=http://xmlrpc-mapreduce:8001
      - CSV_PATH=/app/data/students.csv
      - OUTPUT_FILE=/app/results/xmlrpc_docker_performance_metrics.json
    volumes:
      - ../results:/app/results
    command: ["python", "client.py"]

networks:
  xmlrpc-network:
    driver: bridge

